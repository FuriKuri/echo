---
apiVersion: v1
kind: Secret
metadata:
  name: mysecret
type: Opaque
data:
  username: YWRtaW4=
  password: MWYyZDFlMmU2N2Rm
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: ping
spec:
  replicas: 5
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: ping
    spec:
      containers:
        - name: ping
          image: furikuri/echo
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: SERVER_TYPE
              value: ping
            - name: SECRET_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: username
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: password
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: ping
  name: ping
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      name: http-8080
  selector:
    app: ping
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: pong
spec:
  replicas: 5
  revisionHistoryLimit: 2
  template:
    metadata:
      labels:
        app: pong
    spec:
      containers:
        - name: pong
          image: furikuri/echo
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
          env:
            - name: SERVER_TYPE
              value: pong
            - name: SECRET_USERNAME
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: username
            - name: SECRET_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysecret
                  key: password
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 1
---
kind: Service
apiVersion: v1
metadata:
  labels:
    app: pong
  name: pong
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8080
      name: http-8080
  selector:
    app: pong
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: ping-pong
  annotations:
    ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: minikube.local
      http:
        paths:
        - path: /ping
          backend:
            serviceName: ping
            servicePort: 80
        - path: /pong
          backend:
            serviceName: pong
            servicePort: 80